<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.meronmee</groupId>
	<artifactId>meeqs</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>
	<name>Java SSM Quick Start Framework</name>

	<!-- 定义常量 -->
	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- dependency version -->
		<spring.version>5.0.2.RELEASE</spring.version>
		<shiro.version>1.3.2</shiro.version>
		<junit.version>4.8.2</junit.version>
		<commons-lang3.version>3.6</commons-lang3.version>
		<guava.version>23.3-jre</guava.version>
		<fastjson.version>1.2.41</fastjson.version>
		<freemarker.version>2.3.27-incubating</freemarker.version>
		<slf4j.version>1.7.25</slf4j.version>
		
		<logback.version>1.2.3</logback.version>
		<!-- plugin version -->
		<maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
		<maven-war-plugin.version>2.6</maven-war-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<tomcat7-maven-plugin.version>2.3-SNAPSHOT</tomcat7-maven-plugin.version>
		<build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
	</properties>
	
	<!-- 依赖 -->
	<dependencies>
		<!-- 基础依赖 start -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>
		<!-- 基础依赖 end -->
		
		<!-- 常用工具库 start -->
		<dependency>
		  <groupId>org.apache.commons</groupId>
		  <artifactId>commons-lang3</artifactId>
		  <version>${commons-lang3.version}</version>
		</dependency>		
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>${guava.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.alibaba</groupId>
		    <artifactId>fastjson</artifactId>
		    <version>${fastjson.version}</version>
		</dependency>
		<!-- 常用工具库 end -->
		
		<!-- 日志 start -->
        <!-- 日志框架API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- 日志实现提供者 -->
        <dependency> 
		    <groupId>ch.qos.logback</groupId> 
		    <artifactId>logback-core</artifactId> 
		    <version>${logback.version}</version> 
		</dependency> 
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <!-- 拦截 apache commons logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- 拦截 jdk util logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- 拦截 log4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- 日志结束-->  
		<!-- 日志 end -->
		
				
		<!-- SpringCore start -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- SpringCore end -->

		<!-- SpringMVC 控制层 start -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>		
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${freemarker.version}</version>
        </dependency>        
		<dependency>
		  <groupId>commons-fileupload</groupId>
		  <artifactId>commons-fileupload</artifactId>
		  <version>1.3.3</version>
		</dependency>
		<!-- shiro 访问控制 start -->
		<dependency> 
		  <groupId>org.apache.shiro</groupId>
		  <artifactId>shiro-core</artifactId>
		  <version>${shiro.version}</version>
		</dependency>
		 <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
		  	<version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
		  	<version>${shiro.version}</version>
        </dependency>
        <dependency> 
		  <groupId>org.apache.shiro</groupId> 
		  <artifactId>shiro-ehcache</artifactId> 
		  <version>${shiro.version}</version> 
		</dependency>
		<!-- shiro 访问控制 end -->        
		<!-- SpringMVC 控制层 end -->

		<!-- MyBatis 数据访问层 start -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.38</version>
			<scope>runtime</scope>
		</dependency>
		<dependency> <!-- Druid数据源 -->
	        <groupId>com.alibaba</groupId>
	        <artifactId>druid</artifactId>
	        <version>1.1.5</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
		  <groupId>org.mybatis</groupId>
		  <artifactId>mybatis</artifactId>
		  <version>3.4.5</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.1</version>
		</dependency>
		<dependency> <!-- 分页插件 -->
		  <groupId>com.github.pagehelper</groupId>
		  <artifactId>pagehelper</artifactId>
		  <version>5.1.2</version>
		</dependency>
		<!-- MyBatis 数据访问层 end -->	

	</dependencies>

	<!-- 不同环境配置 -->
	<profiles>
		<!-- 本地环境 -->
		<profile>
			<id>local</id>
			<properties>
				<package.warname>${project.artifactId}</package.warname>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<!-- 开发环境 -->
		<profile>
			<id>dev</id>
			<properties>
				<!-- 配置文件后缀名 -->
				<package.resourceSuffix>_dev</package.resourceSuffix>
				<!-- WAR包名称 -->
				<package.warname>${project.artifactId}.dev.${timestamp}</package.warname>
				<!-- 打包时要排除的文件 -->
				<package.excludes>WEB-INF/classes/com/meronmee/demo/**</package.excludes>
			</properties>
		</profile>
		<!-- 测试环境 -->
		<profile>
			<id>test</id>
			<properties>
				<package.resourceSuffix>_test</package.resourceSuffix>
				<package.warname>${project.artifactId}.test.${timestamp}</package.warname>
				<package.excludes>WEB-INF/classes/com/meronmee/demo/**</package.excludes>
			</properties>
		</profile>
		<!-- 预生产环境 -->
		<profile>
			<id>prep</id>
			<properties>
				<package.resourceSuffix>_prep</package.resourceSuffix>
				<package.warname>${project.artifactId}.prep.${timestamp}</package.warname>
				<package.excludes>WEB-INF/classes/com/meronmee/demo/**</package.excludes>
			</properties>
		</profile>
		<!-- 生产环境 -->
		<profile>
			<id>prod</id>
			<properties>
				<package.resourceSuffix>_prod</package.resourceSuffix>
				<package.warname>${project.artifactId}.prod.${timestamp}</package.warname>
				<package.excludes>WEB-INF/classes/com/meronmee/demo/**</package.excludes>
			</properties>
		</profile>
	</profiles>

	<!-- 打包 -->
	<build>
		<finalName>${package.warname}</finalName>		
        <resources>  
            <resource>  
                <directory>src/main/resources</directory>  
                <filtering>true</filtering>  
				<!-- 排除掉资源目录下的环境相关的配置文件,如:setting.properties_test -->
                <excludes>  
                    <exclude>**/*.properties_*</exclude>
                    <exclude>**/*.xml_*</exclude>
                </excludes>  
            </resource>
        </resources>  
        
		<plugins>
			<!-- 时间戳插件 -->
			<!-- Maven自带时间戳使用${maven.build.timestamp}使用的是UTC时区, 我们需要的是GMT+8时区 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>timestamp-property</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<name>timestamp</name>
					<pattern>yyyyMMdd_HHmmss</pattern>
					<timeZone>GMT+8</timeZone>
				</configuration>
			</plugin>
			
			<!-- 编译插件 -->
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>  
			    <configuration>
			        <source>${java.version}</source>
			        <target>${java.version}</target>
			        <encoding>${project.build.sourceEncoding}</encoding>
			    </configuration>
			</plugin>
			
			<!-- 打包插件 -->
			<!-- http://maven.apache.org/plugins/maven-war-plugin/war-mojo.html -->
			<plugin>  
                <groupId>org.apache.maven.plugins</groupId>  
                <artifactId>maven-war-plugin</artifactId>  
                <version>${maven-war-plugin.version}</version>  
                <configuration>  
                    <archive>  
                        <addMavenDescriptor>false</addMavenDescriptor>  
                    </archive>
                    <packagingExcludes>${package.excludes}</packagingExcludes>  
                </configuration>  
            </plugin>  
			
			<!-- antrun插件用于根据不同环境选用不同的配置文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>maven-antrun</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="********************Copying properties files *************************" />
								<copy file="src/main/resources/config/system.properties${package.resourceSuffix}" tofile="target/classes/config/system.properties" overwrite="true" />
								<copy file="src/main/resources/config/setting.properties${package.resourceSuffix}" tofile="target/classes/config/setting.properties" overwrite="true" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
						
			<!-- tomcat7插件, 自动发布到tomcat -->  
			<!-- 
            <plugin>  
                <groupId>org.apache.tomcat.maven</groupId>  
                <artifactId>tomcat7-maven-plugin</artifactId>  
                <version>${tomcat7-maven-plugin.version}</version>  
                <configuration>
                    <path>/${project.artifactId}</path>   
                    <port>8080</port>
                    <server>tomcat7</server>
                    <uriEncoding>UTF-8</uriEncoding>  
                    <update>true</update>  
                </configuration>  
            </plugin>  
            -->                
		</plugins>
	</build>
	
</project>
