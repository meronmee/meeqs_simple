<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.meronmee</groupId>
	<artifactId>meeqs</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>
	<name>Java SSM Quick Start Framework</name>

	<!-- 定义常量 -->
	<properties>
		<java.home>D:\Dev\Java\jdk1.8.0_51</java.home>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- dependency version -->
		<junit.version>4.8.2</junit.version>
		<commons-lang3.version>3.6</commons-lang3.version>
		<guava.version>23.3-jre</guava.version>
		
		<!-- plugin version -->
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<tomcat7-maven-plugin.version>2.3-SNAPSHOT</tomcat7-maven-plugin.version>
		<maven-war-plugin.version>2.2</maven-war-plugin.version>
		<build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
	</properties>
	
	<!-- 依赖 -->
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
		</dependency>

		<dependency>
		  <groupId>org.apache.commons</groupId>
		  <artifactId>commons-lang3</artifactId>
		  <version>${commons-lang3.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		    <version>${guava.version}</version>
		</dependency>
		

	</dependencies>

	<!-- 不同环境配置 -->
	<profiles>
		<!-- 本地环境 -->
		<profile>
			<id>local</id>
			<properties>
				<package.env>local</package.env>
				<package.warname>${project.artifactId}</package.warname>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<!-- 开发环境 -->
		<profile>
			<id>dev</id>
			<properties>
				<package.env>dev</package.env>
				<package.warname>${project.artifactId}.dev.${timestamp}</package.warname>
			</properties>
		</profile>
		<!-- 测试环境 -->
		<profile>
			<id>test</id>
			<properties>
				<package.env>test</package.env>
				<package.warname>${project.artifactId}.test.${timestamp}</package.warname>
			</properties>
		</profile>
		<!-- 预生产环境 -->
		<profile>
			<id>prep</id>
			<properties>
				<package.env>prep</package.env>
				<package.warname>${project.artifactId}.prep.${timestamp}</package.warname>
			</properties>
		</profile>
		<!-- 生产环境 -->
		<profile>
			<id>prod</id>
			<properties>
				<package.env>prod</package.env>
				<package.warname>${project.artifactId}.prod.${timestamp}</package.warname>
			</properties>
		</profile>
	</profiles>

	<!-- 打包 -->
	<build>
		<finalName>${package.warname}</finalName>
		<!-- <finalName>${project.artifactId}.${package.env}.${timestamp}</finalName> --> 		
        <resources>  
            <resource>  
                <directory>src/main/resources</directory>  
                <filtering>true</filtering>  
				<!-- 排除掉资源目录下的环境相关的配置文件,如:setting.properties_test -->
                <excludes>  
                    <exclude>*.properties_*</exclude>
                    <exclude>*.xml_*</exclude>
                </excludes>  
            </resource>  
        </resources>  
        
		<plugins>
			<!-- 时间戳插件 -->
			<!-- Maven自带时间戳使用${maven.build.timestamp}使用的是UTC时区, 我们需要的是GMT+8时区 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>timestamp-property</id>
						<goals>
							<goal>timestamp-property</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<name>timestamp</name>
					<pattern>yyyyMMdd_HHmmss</pattern>
					<timeZone>GMT+8</timeZone>
				</configuration>
			</plugin>
			
			<!-- 打包插件 -->
			<plugin>  
                <groupId>org.apache.maven.plugins</groupId>  
                <artifactId>maven-war-plugin</artifactId>  
                <version>${maven-war-plugin.version}</version>  
                <configuration>  
                    <archive>  
                        <addMavenDescriptor>false</addMavenDescriptor>  
                    </archive>
                </configuration>  
            </plugin>  
			
			<!-- antrun插件用于根据不同环境选用不同的配置文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<id>maven-antrun</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="********************Copying properties files *************************" />
								<copy file="src/main/resources/system.properties_${package.env}" tofile="target/classes/system.properties" overwrite="true" />
								<copy file="src/main/resources/setting.properties_${package.env}" tofile="target/classes/setting.properties" overwrite="true" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- tomcat7插件, 自动发布到tomcat -->  
            <plugin>  
                <groupId>org.apache.tomcat.maven</groupId>  
                <artifactId>tomcat7-maven-plugin</artifactId>  
                <version>${tomcat7-maven-plugin.version}</version>  
                <configuration>
                    <path>/${project.artifactId}</path>   
                    <port>8080</port>
                    <server>tomcat7</server>
                    <uriEncoding>UTF-8</uriEncoding>  
                    <update>true</update>  
                </configuration>  
            </plugin>                  
		</plugins>
	</build>
	
</project>
