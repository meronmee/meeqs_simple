<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">
		
    <!-- 数据库相关配置 -->

    <!--1.数据源druid -->
    <!-- http://blog.csdn.net/hj7jay/article/details/51686418 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 用户名 -->
        <property name="username" value="${db.jdbc.username}" />
        <!-- 用户密码 -->
        <property name="password" value="${db.jdbc.password}" />
        <!-- 驱动类名 -->
        <property name="driverClassName" value="${db.jdbc.driver}" />
        <!-- 连接地址 -->
        <property name="url" value="${db.jdbc.url.master}" />

        <!--初始化连接数-->
        <property name="initialSize" value="${db.druid.pool.initialSize.master}" />
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="${db.druid.pool.maxActive.master}" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="${db.druid.pool.minIdle.master}" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${db.druid.pool.maxWait.master}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="200" />
		<property name="defaultAutoCommit" value="false" />

      	<property name="removeAbandoned" value="true" /><!-- 是否打开removeAbandoned功能 -->
		<property name="removeAbandonedTimeout" value="${db.druid.pool.removeAbandonedTimeout.master}" /><!-- 1800秒，也就是30分钟 -->
		<property name="logAbandoned" value="true" /><!-- 关闭abanded连接时输出错误日志 -->
		
    	<!-- proxyFilters方式配置监控统计拦截的filters -->
	  	<property name="proxyFilters">
	        <list>
	            <ref bean="stat-filter" />
	            <ref bean="log-filter"/>
	        </list>
	    </property> 	    
	</bean>    
    <!--sql执行监控-->   
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
	   	 <property name="slowSqlMillis" value="10000" />
	   	 <property name="logSlowSql" value="true" />
	   	 <property name="mergeSql" value="true" />
   	</bean>
   	<!--log4j日志记录SQL执行情况-->
   	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
    	<property name="resultSetLogEnabled" value="false" />
     	<property name="statementExecutableSqlLogEnable" value="true" />
   	</bean>

    <!--2、配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置mybatis全局配置文件:mybatis-config.xml-->
        <property name="configLocation" value="classpath:service/mybatis.xml"/>
        <!--扫描sql配置文件:mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath*:service/mapper/*.xml"/>
        <property name="plugins">
        <array>
            <bean class="com.github.pagehelper.PageInterceptor">
                <!-- 这里的几个配置主要演示如何使用，如果不理解，一定要去掉下面的配置 -->
                <property name="properties">
                    <value>helperDialect=mysql</value>
                </property>
            </bean>
        </array>
    </property>
    </bean>

    <!--3、配置扫描Dao接口包,动态实现DAO接口,注入到spring容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入SqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描的Dao接口,多个用;隔开-->
        <property name="basePackage" value="${mapper.scanner.dao.package}"/>        
		<property name="processPropertyPlaceHolders" value="true"/>
    </bean>  
    <!--4、配置sqlSessionTemplate-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">         
        <constructor-arg index="0" ref="sqlSessionFactory" />   
    </bean>
    
    <!--5、配置事务管理器(mybatis采用的是JDBC的事务管理器)-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--6、配置基于注解的声明式事务,默认使用注解来管理事务行为-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
</beans>
